---
#
# Clang-Tidy configuration for Celerity.
#
# There are three usage scenarios:
# 1. Automatic checks through an IDE (CLion, VsCode, ...)
# 2. Running manually on select files (not recommended)
#    `clang-tidy -p path/to/compile_commands.json file1 [file2, ...]`
#    Note: A script for running clang-tidy on all Celerity sources is provided in `ci/run-clang-tidy.sh`
# 3. Running on a diff (also done during CI)
#    `git diff -U0 --no-color | clang-tidy-diff.py -p1 -path path/to/compile_commands.json`
#
InheritParentConfig: false
# See https://clang.llvm.org/extra/clang-tidy/checks/list.html for a full list of available checks.
Checks: -*,
  bugprone-*,
  -bugprone-easily-swappable-parameters,
  -bugprone-lambda-function-name,
  -bugprone-macro-parentheses,
  misc-*,
  -misc-no-recursion
  -misc-non-private-member-variables-in-classes,
  clang-analyzer-*,
  clang-diagnostic-*,
  cppcoreguidelines-*,
  -cppcoreguidelines-avoid-c-arrays,
  -cppcoreguidelines-avoid-magic-numbers,
  -cppcoreguidelines-macro-usage,
  -cppcoreguidelines-pro-bounds-pointer-arithmetic,
  mpi-*,
  performance-*,
  readability-*,
  -readability-avoid-const-params-in-decls
  -readability-identifier-length,
  -readability-magic-numbers,
  -readability-uppercase-literal-suffix,

CheckOptions:
  ####################
  # Naming conventions
  ####################
  - key: readability-identifier-naming.ClassCase
    value: lower_case
  - key: readability-identifier-naming.ClassMethodCase
    value: lower_case
  - key: readability-identifier-naming.EnumCase
    value: lower_case
  - key: readability-identifier-naming.EnumConstantCase
    value: lower_case
  - key: readability-identifier-naming.FunctionCase
    value: lower_case
  - key: readability-identifier-naming.LocalVariableCase
    value: lower_case
  - key: readability-identifier-naming.LocalVariableIgnoredRegexp
    # Allow single-letter uppercase variable names
    value: "[A-Z]"
  - key: readability-identifier-naming.ParameterCase
    value: lower_case
  - key: readability-identifier-naming.ParameterIgnoredRegexp
    # Allow single-letter uppercase function parameters
    value: "[A-Z]"
  - key: readability-identifier-naming.ProtectedMemberCase
    value: lower_case
  - key: readability-identifier-naming.ProtectedMemberPrefix
    value: m_
  - key: readability-identifier-naming.PrivateMemberCase
    value: lower_case
  - key: readability-identifier-naming.PrivateMemberPrefix
    value: m_
  - key: readability-identifier-naming.TemplateParameterCase
    value: CamelCase
  ##########################
  # Other coding conventions
  ##########################
  - key: readability-braces-around-statements.ShortStatementLines
    # Allow control-flow statements w/o braces when on a single line
    value: 1
  ##########################
  # Various check options
  ##########################
  - key: misc-const-correctness.TransformPointersAsValues
    value: true

# Treat naming violations as errors
# TODO: Also add misc-const-correctness here once that's become more reliable (check again for Clang > 15)
WarningsAsErrors: "readability-identifier-naming"

# Use .clang-format configuration for fixes
FormatStyle: file
